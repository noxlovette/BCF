services:
  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - ./frontend/.env
    command: npm run dev
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /Volumes/Thor/:/app/Volumes/Thor/
    environment:
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=p3rfume$ucks
      - DB_HOST=db
      - DB_PORT=5432
    env_file:
      - ./backend/.env
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - db

  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-defaultdb}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
