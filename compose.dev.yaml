services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/static:/app/static
      - ./frontend/src:/app/src
    environment:
      - NODE_ENV=development
      - BACKEND_URL="http://backend:8000"
    env_file:
      - ./frontend/.env

    depends_on:
      - backend

  redis:
    image: redis/redis-stack:latest
    container_name: redis-bcf
    ports:
      - "6379:6379"
      - "8001:8001"

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: backend
    volumes:
      - ./backend:/app
    environment:
      - POSTGRES_DB=bcf-development
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - NODE_ENV=development
    env_file:
      - ./backend/.env
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - db

  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=bcf-development
      - POSTGRES_PASSWORD=changeme
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
